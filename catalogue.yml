- name: catalogue
  hosts: catalogue
  become: true
  tasks:
  - name: Disable node js
    ansible.builtin.command:
      cmd: dnf module disable nodejs -y 
  
  - name: Disable node js
    ansible.builtin.command:
      cmd: dnf module enable nodejs:18 -y

  - name: install nginx
    ansible.builtin.package:
      name: nginx
      state: present

  - name: add Roboshop user
    ansible.builtin.user:
      name: roboshop

  - name: creating directory
    ansible.builtin.file:
      path: /app
      state: directory 

  - name: downloading the application code
    ansible.builtin.get_url:
      url: https://roboshop-builds.s3.amazonaws.com/catalogue.zip
      dest: /tmp/catalogue.zip

  - name: extracting file
    ansible.builtin.unarchive:
      src: /tmp/catalogue.zip
      dest: /app 
      remote_src: yes

  - name: install dependencies
    ansible.builtin.package:
      name: npm
      state: present

  - name: copy catalogue repo 
    ansible.builtin.copy:
      src: catalogue repo
      dest: /etc/systemd/system/catalogue.service

  - name: Reload systemd daemon
    ansible.builtin.systemd:
      daemon_reload: true

  - name: enable and start  
    ansible.builtin.service:
      name: catalogue
      enabled: yes
      state: started

  - name: copy client   
    ansible.builtin.copy:
      src: mongo client
      dest: /etc/yum.repos.d/mongo.repo

  - name: install shell
    ansible.builtin.package:
      name: mongodb-org-shell

  - name: get the categories count
     ansible.builtin.command: mongo --host mongodb.practicedevopsproject.online --quiet --eval 'db = db.getSiblingDB("catalogue"); db.products.count()'
     register: product_count

  - name: load schema
    ansible.builtin.command:
      cmd: mongo --host mongodb.practicedevopsproject.online < /app/schema/catalogue.js
    when: product_count.stdout == "0"

   - name: start and enable catalogue
     ansible.builtin.service:
      name: catalogue
      state: restarted
      enabled: yes
    